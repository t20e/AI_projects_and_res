# Taco Configurations.


#  ---- NOTE ---- : for future projects use a dataclass to store configurations instead of a Namespace.
#  Example:
#     from dataclasses import dataclass
#     import yaml
#     @dataclass
#     class Config:


DEVICE: "mps" # GPU device ->  "mps": Apple silicon M series | "cuda": Nvidia GPU | "cpu": if no GPUs available use CPU
NUM_WORKERS: 2
PIN_MEMORY: True
EPOCHS: 50 # if epoch = 1, model sees dataset 1 time.

LEARNING_RATE: 2e-5 # TODO implement a scheduled learning rate
BATCH_SIZE: 64 # 64 images per batch

WEIGHT_DECAY: 0  # TODO play with weight decay


# Load a model Pre-trained model, to continue training it.
CON_TRAINING: False  # continue to train a model
LOAD_MODEL_FILE: "" #ex:  "Yolo_v1_taco_448_448_epoch_50_2025-04-27.pt"

MODE: "train" # "train" "test" or "valid" which dataset to grab.
DATASET_DIR: "./data"  # root path to the dataset dir
IMAGE_SIZE: 448 # 448x448


C: 18  # how many classes in the dataset
B: 2  # how many bounding boxes does the model predict per cell
S: 7  # split_size how to split the image, 7x7=49 grid cells
IOU_THRESHOLD: 0.8  # the iou threshold when comparing bounding boxes for NMS
MIN_THRESHOLD: 0.6  # the minimal confidence to keep a predicted bounding box



# ---- NOTE ---- : the below code is add at the load_config() function/ also maybe this could be hardcoded in.


# NOTE: NUM_NODES_PER_CELL and NUM_NODES_PER_IMG could have been named better like "D" or "M"
# The total number of nodes that a single cell has in a label for one image, which would be the size -> [*classes, pc_1, bbox1_x_y_w_h, pc_2, bbox2_x_y_w_h]. If S=7 C=18 B=2 --> 28 nodes.
# config.NUM_NODES_PER_CELL = config.C + 5 * config.B

# # The total number of nodes that each label has for one image. If S=7 C=18 B=2 --> 7 * 7 * (18 + 2 * 5) = 1,372 | 7x7=49 -> 49*28 = 1,372 | the * 5 is for the second bbox in the cell -> pc_2, x, y, w, h
# config.NUM_NODES_PER_IMG = config.S * config.S * (config.C + config.B * 5)